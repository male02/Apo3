package umariana.taller1;

import java.util.ArrayList;
import java.util.Scanner;
import mundo.Tarea;
/**
 *
 * @author Maria Vallejo 

 */
public class Taller1 {

    public static void main(String[] args) {
        
         Scanner lector=new Scanner(System.in);
         boolean tareaAgregada= false;
         ArrayList<Tarea> misTareas= new ArrayList<>();
         
        
        boolean activo=true;
        do{
            //Realizar menu de opciones 
            System.out.println("=====MENU DE OPCIONES=====");
            System.out.println("Seleccione una opcion: ");
            System.out.println("1.Agregar tarea ");
            System.out.println("2.Mostrar tarea");
            System.out.println("3.Prioridad de tareas");
            System.out.println("4.Salir del programa");
            System.out.println("=========================");
          
      int opcion = lector.nextInt();
      
      switch(opcion){
            case 1:
                //Permitir al usuario agregar la informacion de una tarea
                System.out.println("====AGREGAR UNA TAREA====");
                System.out.println("Ingrese el ID de la tarea: ");
                 int idTarea = lector.nextInt();

                lector.nextLine();
                
                System.out.println("Ingrese la descripcion de la tarea: ");
                 String descripcion = lector.nextLine();
                 int prioridad;
                    do {
                System.out.println("Ingrese la prioridad de la tarea 1 a 5: ");
                  prioridad = lector.nextInt();
                  
                //Condicion para poner un limite entre el rango de prioridad
                if (prioridad < 1 || prioridad > 5) {
                  System.out.println("NUMERO NO VALIDO.");
                }else{       
                 }
                } while (prioridad < 1 || prioridad > 5);
                    
                // Creacion del objeto con su informacion
                Tarea nuevaTarea = new Tarea(idTarea, descripcion, prioridad);
                
                // Almacenar el objeto en la contenedora
                misTareas.add(nuevaTarea);
                
                //permitir al usuario conocer si la tarea fue agregada
                tareaAgregada= true;
                System.out.println("TAREA AGREGADA CON EXITO!");
                break;       
                
         case 2:
                {
              //Condicional para mostrar o no mostrar las tareas agregadas     
                if(tareaAgregada==false){
                  System.out.println("NO HAY TAREAS AGREGADAS");
                }else{
                  System.out.println("===Tareas Registradas===");
              //Mostrar la informacion de las tareas agregadas
                for(Tarea t: misTareas){
                  System.out.println("ID: "+t.getIdTarea());
                  System.out.println("Descripcion: "+t.getDescripcion());
                  System.out.println("Prioridad: "+t.getPrioridad());
                  System.out.println("=======================");
                        }  
                    }
                }
                break;  
                
        case 3:
            
               //Condicional para mostrar o no mostrar las tareas por numero de prioridad
               if (tareaAgregada == false) {
                 System.out.println("NO HAY TAREAS AGREGADAS");
               }else{
                 System.out.println("====PRIORIDAD DE TAREAS===");
                 
                // Ordenar las tareas de forma descendente dependiendo su prioridad
                for (int i = 5; i >= 1; i--) {
                  for (Tarea tarea : misTareas) {
                if (tarea.getPrioridad() == i) {
                 System.out.println("Id: " + tarea.getIdTarea());
                 System.out.println("Descripci√≥n: " + tarea.getDescripcion());
                 System.out.println("Prioridad: " + tarea.getPrioridad());
                 }
                  }
                  }
                  }

                    break;

         case 4:
             //Finalizar el programa si el usuario digita la opcion 4
                  System.out.println("===PROGRAMA FINALIZADO===");
                  activo=false;
                  break;
                  
            //si el usuario no elige alguna opcion dentro del menu, mostrar que hay un error      
           default:
           System.out.println("OPCION NO VALIDA");
            }
}while(activo);
    
}
}

package mundo;

/**
 *
 * @author Maria Vallejo
 */
public class Tarea {
    //ATRIBUTOS
    private int idTarea;
    private String descripcion;
    private int prioridad;
            
   //METODOS

    public Tarea() {
    }

    public Tarea(int idTarea, String descripcion, int prioridad) {
        this.idTarea = idTarea;
        this.descripcion = descripcion;
        this.prioridad = prioridad;
    }

    public int getIdTarea() {
        return idTarea;
    }

    public void setIdTarea(int idTarea) {
        this.idTarea = idTarea;
    }

    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public int getPrioridad() {
        return prioridad;
    }

    public void setPrioridad(int prioridad) {
        this.prioridad = prioridad;
    }
            
}
